@model DealDouble.Web.ViewModels.DetailsViewModel

<div class="row">

    <div class="col-md-12">
        <div class="card mt-4">
            @if (Model.auction != null && Model.auction.AuctionPictures.Count > 0)
            {
                var i = 0;
                var FirstAuctionPicture = Model.auction.AuctionPictures.First();
                <div id="carouselExampleIndicators" class="carousel slide my-4" data-ride="carousel">
                    <ol class="carousel-indicators">
                        @foreach (var Picture in Model.auction.AuctionPictures)
                        {
                            var IsActive = FirstAuctionPicture == Picture ? "active" : string.Empty;
                            <li class="@IsActive" data-target="#carouselExampleIndicators" data-slide-to="@i"></li>
                            i++;
                        }
                    </ol>
                    <div class="carousel-inner" role="listbox">

                        @foreach (var Picture in Model.auction.AuctionPictures)
                        {
                            var IsActive = FirstAuctionPicture == Picture ? "active" : string.Empty;
                            <div class="carousel-item @IsActive">
                                <img class="d-block img-fluid" src="/Content/Images/@Picture.Picture.URL">
                            </div>
                        }
                    </div>

                    <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="sr-only">Previous</span>
                    </a>
                    <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="sr-only">Next</span>
                    </a>
                </div>
            }
            <div class="card-body">
                <h3 class="card-title">
                    @Model.auction.Title

                    @if (Model.LastBidder != null)
                    {
                        <text>
                            [@Model.LastBidder.UserName]
                        </text>
                    }
                </h3>
                <h4>
                    $@Model.BidAmount
                </h4>
                <p class="card-text">@Model.auction.Description</p>
                <span class="text-warning float-right">
                    @{
                        var defaultstars = 5 - Model.AvgRating;
                        for (int i = 0; i < Model.AvgRating; i++)
                        {
                            <i class="fas fa-star"></i>
                        }
                        for (int i = 0; i < defaultstars; i++)
                        {
                            <i class="far fa-star"></i>
                        }
                    }
                </span>
            </div>
            <form class="form-inline">
                @if (Model.IsAuthenticated)
                {
                    <div class="form-group mx-sm-3 mb-2">
                        <input class="form-control" id="BidAmount" placeholder="Enter Your Bid">
                    </div>
                    <button type="button" class="btn btn-primary mb-2" id="BidBtn">Bid Now</button>
                }
                else
                {
                    <div class="card-footer">
                        <p>You Need To Login To Submit a Bid..</p>
                    </div>
                }

            </form>
        </div>
        @if (Model.Comments != null && Model.Comments.Count > 0)
        {
            Html.RenderPartial("_Comments");
        }
        else
        {
            <div class="card-footer">
                <p>No Comments Submited Yet...</p>
            </div>
        }
    </div>
</div>

<script>
    $(".ratingStar").hover(function () {
        $(".ratingStar").addClass("far").removeClass("fas");
        $(this).addClass("fas").removeClass("far");
        $(this).prevAll(".ratingStar").addClass("fas").removeClass("far");

    });

    $(".ratingStar").click(function () {
        debugger;
        var ratingvalue = $(this).attr("data-value");
        $("#ratingValue").val(ratingvalue);
    })

    $("#BidBtn").click(function () {
        $.ajax({
            type: "Post",
            url: "@Url.Action("Bid","Bids")",
            data: {
                ID: '@Model.auction.ID',
                BidAmount: $("#BidAmount").val()
            }
        }).done(function (response) {
            if (response.Success) {
                window.location.reload();
            }
            else {
                swal("error", response.Message, "error");
            }
        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            swal("error", "error occured. please try again later..", "error");
        });
    });

    $("#CommentForm").validate({
        rules: {
            Text: {
                required: true,
                minlength: 15,
                maxlength: 150,
            }
        },
        messages: {
            Text: {
                required: 'Text is required',
                minlength: 'Minimum Length is 15',
                maxlength: 'Maximum Length is 150'
            }
        }
    });

    $("#CommentBtn").click(function () {
        if ($("#CommentForm").valid()) {
        $.ajax({
            type: "Post",
            url: "@Url.Action("LeaveComment", "Shared")",
            data: $("#CommentForm").serialize()
        }).done(function (response) {
            if (response.Success) {
                window.location.reload();
            }
            else {
                swal("error", response.Message, "error");
            }
        }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
            swal("error", "error occured. please try again later..", "error");
        });
        }

    });
</script>